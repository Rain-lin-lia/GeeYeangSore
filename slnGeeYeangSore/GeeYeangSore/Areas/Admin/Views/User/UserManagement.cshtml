@model X.PagedList.IPagedList<GeeYeangSore.Areas.Admin.ViewModels.UserManagement.CUserViewModels>

@{
	ViewData["Title"] = "使用者管理";
}

<style>
    .btn-main {
        background-color: #3CDDD2;
        border-color: #3CDDD2;
        color: white;
    }

    .btn-main:hover {
        background-color: #24B4A8;
        border-color: #24B4A8;
        color: white;
    }

    .search-section {
        background-color: #F0F9F8;
        padding: 20px;
        border-radius: 8px;
        margin-bottom: 20px;
    }

    .table th {
        background-color: #F0F9F8;
        color: #222222;
    }

    .pagination .page-item.active .page-link {
        background-color: #3CDDD2;
        border-color: #3CDDD2;
    }

    .pagination .page-link {
        color: #000000;
    }

    .pagination .page-link:hover {
        color: #24B4A8;
    }
</style>

<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>使用者管理</h2>
        <a href="/Admin/Home/Index" class="btn btn-main">返回首頁</a>
    </div>

<!-- 🔍 搜尋表單 -->
<form id="searchForm" class="search-section mb-3">
	<div class="row mb-2">
		<div class="col-md-4">
			<input type="text" class="form-control" name="userId" placeholder="請輸入房客ID或房東ID" />
		</div>
		<div class="col-md-4">
			<input type="text" class="form-control" name="name" placeholder="請輸入房客姓名或房東姓名" />
		</div>
	</div>

	<div class="row mb-2">
		<div class="col-6">
			<label class="form-label">註冊期間</label>
			<div class="input-group">
				<input type="date" class="form-control" name="startDate" />
				<span class="input-group-text">~</span>
				<input type="date" class="form-control" name="endDate" />
			</div>
		</div>
	</div>
	<div class="row mb-2">
		<div class="col-md-3">
			<select class="form-select" name="status">
				<option value="">所有狀態</option>
				<option value="未驗證">未驗證</option>
				<option value="驗證中">驗證中</option>
				<option value="已驗證">已驗證</option>
				<option value="封鎖中">封鎖中</option>
			</select>
		</div>

		<div class="col-md-3">
			<select class="form-select" name="isLandlord">
				<option value="">是否為房東</option>
				<option value="true">是</option>
				<option value="false">否</option>
			</select>
		</div>
	</div>
	<div class="col-md-10 text-end">

		<button type="button" id="btnCreateUser" class="btn btn-warning" style="width: 150px">新增</button>
		<button type="button" id="btnClear" class="btn btn-secondary" style="width: 150px">清除</button>
		<button type="submit" class="btn btn-main" style="width: 200px">搜尋</button>
	</div>

</form>

<hr />

<!-- 📋 初始顯示使用者資料 -->
<div id="searchResult">
	@await Html.PartialAsync("~/Areas/Admin/Partials/UserManagement/_UserListPartial.cshtml", Model)
</div>

<!-- 🪟 編輯彈窗 -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="editModalLabel">編輯使用者</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="關閉"></button>
			</div>
			<div class="modal-body" id="editModalBody">
				<div class="text-center text-muted">
					載入中...
				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

	<script>
		// 顯示提示訊息的函數
		function showToast(message, isSuccess = true) {
			const toastContainer = document.getElementById('toast-container');
			if (!toastContainer) {
				// 如果不存在toast容器，則創建一個
				const container = document.createElement('div');
				container.id = 'toast-container';
				container.className = 'position-fixed top-0 end-0 p-3';
				container.style.zIndex = '1050';
				document.body.appendChild(container);
			}
			
			// 生成唯一ID
			const toastId = 'toast-' + new Date().getTime();
			
			// 創建toast元素
			const toastHTML = `
				<div id="${toastId}" class="toast align-items-center ${isSuccess ? 'text-bg-success' : 'text-bg-danger'}" role="alert" aria-live="assertive" aria-atomic="true">
					<div class="d-flex">
						<div class="toast-body">
							${message}
						</div>
						<button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
					</div>
				</div>
			`;
			
			// 添加到容器中
			document.getElementById('toast-container').innerHTML += toastHTML;
			
			// 初始化並顯示toast
			const toastElement = document.getElementById(toastId);
			const toast = new bootstrap.Toast(toastElement, { autohide: true, delay: 3000 });
			toast.show();
			
			// 自動移除DOM元素
			toastElement.addEventListener('hidden.bs.toast', function() {
				this.remove();
			});
		}

		function loadPage(page) {

			const formData = {
				HTenantId: $('#editForm').find('input[name="HTenantId"]').val(),
				HUserName: userName,
				HBirthday: $('#editForm').find('input[name="HBirthday"]').val() || null,
				HGender: $('#editForm').find('select[name="HGender"]').val() === "true",
				HPhoneNumber: phoneNumber,
				HEmail: email,
				HPassword: $('#editForm').find('input[name="HPassword"]').val().trim() || null,
				HAddress: $('#editForm').find('input[name="HAddress"]').val().trim() || null,
				HStatus: $('#editForm').find('select[name="HStatus"]').val() || "未驗證",
				HImages: photoFileName || $('#HImages').val() || null,
				HLandlords: [{
					HLandlordName: $('#editForm').find('input[name="HLandlords[0].HLandlordName"]').val(),
					HStatus: $('#editForm').find('select[name="HLandlords[0].HStatus"]').val(),
					HBankName: $('#editForm').find('input[name="HLandlords[0].HBankName"]').val(),
					HBankAccount: $('#editForm').find('input[name="HLandlords[0].HBankAccount"]').val(),
					HIdCardFrontUrl: $('#editForm').find('input[name="HLandlords[0].HIdCardFrontUrl"]').val(),
					HIdCardBackUrl: $('#editForm').find('input[name="HLandlords[0].HIdCardBackUrl"]').val()
				}]
			};

			// 檢查房東資料是否存在
			const hasLandlordData = formData.HLandlords[0].HLandlordName || 
				formData.HLandlords[0].HStatus || 
				formData.HLandlords[0].HBankName || 
				formData.HLandlords[0].HBankAccount;

			// 如果沒有房東資料，則不發送房東資料
			if (!hasLandlordData) {
				delete formData.HLandlords;
			}

			$.ajax({
				url: `/Admin/User/SearchUser?page=${page}`,
				method: 'POST',
				contentType: 'application/json',
				data: JSON.stringify(formData),
				success: function (result) {
					$('#searchResult').html(result);
				},
				error: function (xhr) {
					$('#searchResult').html('<div class="alert alert-danger text-center">載入失敗</div>');
					console.error("分頁錯誤：", xhr.responseText);
				}
			});
		}

		$(document).ready(function () {

					// ✅ 新增使用者按鈕事件
		$('#btnCreateUser').on('click', function () {
			const modal = new bootstrap.Modal(document.getElementById('editModal'));
			$('#editModalLabel').text('新增使用者');
			$('#editModalBody').html('<div class="text-muted text-center">載入中...</div>');
			modal.show();

			$.get('/Admin/User/Create', function (html) {
				$('#editModalBody').html(html);
				if (typeof bindCreateForm === 'function') bindCreateForm();
			}).fail(function () {
				$('#editModalBody').html('<div class="text-danger text-center">載入失敗</div>');
			});
		});


			$('#btnClear').on('click', function () {
				$('#searchForm').find('input[type="text"], input[type="date"], select').val('');
				$('#searchForm').submit();
			});

			$('#searchForm').on('submit', function (e) {
				e.preventDefault();
				const formData = {
					userId: $('input[name="userId"]').val() || null,
					name: $('input[name="name"]').val() || null,
					status: $('select[name="status"]').val() || null,
					startDate: $('input[name="startDate"]').val() || null,
					endDate: $('input[name="endDate"]').val() || null,
					isLandlord: $('select[name="isLandlord"]').val() !== "" ? JSON.parse($('select[name="isLandlord"]').val()) : null
				};

				$.ajax({
					url: '@Url.Action("SearchUser", "User", new { area = "Admin" })',
					method: 'POST',
					contentType: 'application/json',
					data: JSON.stringify(formData),
					success: function (result) {
						$('#searchResult').html(result);
					},
					error: function (xhr) {
						$('#searchResult').html('<div class="alert alert-danger text-center">搜尋失敗，請稍後再試。</div>');
						console.error("搜尋錯誤訊息：", xhr.responseText);
					}
				});
			});

			$(document).on('click', '.btn-edit', function () {
				const id = $(this).data('id');
				$('#editModalBody').html('<div class="text-center text-muted">載入中...</div>');
				$('#editModalLabel').text('編輯使用者');
				const modal = new bootstrap.Modal(document.getElementById('editModal'));
				modal.show();

				$.ajax({
					url: '/Admin/User/Edit?id=' + id,
					success: function (html) {
						$('#editModalBody').html(html);
						if (typeof bindEditForm === 'function') bindEditForm();
					},
					error: function () {
						$('#editModalBody').html('<div class="text-danger text-center">載入失敗</div>');
					}
				});
			});

					function bindEditForm() {
			const normalizeImagePath = (filename) => {
				if (!filename) return "";
				return filename.replace(/^\/?images\/User\/?/i, "/images/User/");
			};

            // 密碼顯示切換功能
            window.toggleEditPassword = function() {
                const passwordField = document.getElementById('edit-password-field');
                const icon = document.getElementById('edit-password-toggle-icon');
                
                if (passwordField.type === 'password') {
                    passwordField.type = 'text';
                    icon.classList.remove('fa-eye');
                    icon.classList.add('fa-eye-slash');
                } else {
                    passwordField.type = 'password';
                    icon.classList.remove('fa-eye-slash');
                    icon.classList.add('fa-eye');
                }
            };

            // 檢查電話唯一性
            $('input[name="HPhoneNumber"]', '#editForm').on('blur', function() {
                const phoneNumber = $(this).val().trim();
                if (phoneNumber) {
                    $.getJSON(`/Admin/User/CheckPhoneExists?phoneNumber=${encodeURIComponent(phoneNumber)}&excludeId=${$('input[name="HTenantId"]', '#editForm').val()}`, function(data) {
                        if (data.exists) {
                            $('input[name="HPhoneNumber"]', '#editForm').addClass('is-invalid').focus();
                            if (!$('input[name="HPhoneNumber"]', '#editForm').next('.invalid-feedback').length) {
                                $('input[name="HPhoneNumber"]', '#editForm').after('<div class="invalid-feedback">此電話號碼已被使用，請使用其他電話號碼</div>');
                            }
                        } else {
                            $('input[name="HPhoneNumber"]', '#editForm').removeClass('is-invalid').addClass('is-valid');
                            $('input[name="HPhoneNumber"]', '#editForm').next('.invalid-feedback').remove();
                        }
                    });
                }
            });

            // 檢查電子郵件唯一性
            $('input[name="HEmail"]', '#editForm').on('blur', function() {
                const email = $(this).val().trim();
                if (email) {
                    $.getJSON(`/Admin/User/CheckEmailExists?email=${encodeURIComponent(email)}&excludeId=${$('input[name="HTenantId"]', '#editForm').val()}`, function(data) {
                        if (data.exists) {
                            $('input[name="HEmail"]', '#editForm').addClass('is-invalid').focus();
                            if (!$('input[name="HEmail"]', '#editForm').next('.invalid-feedback').length) {
                                $('input[name="HEmail"]', '#editForm').after('<div class="invalid-feedback">此電子郵件已被使用，請使用其他電子郵件</div>');
                            }
                        } else {
                            $('input[name="HEmail"]', '#editForm').removeClass('is-invalid').addClass('is-valid');
                            $('input[name="HEmail"]', '#editForm').next('.invalid-feedback').remove();
                        }
                    });
                }
            });

			// 房客照片上傳（編輯）
			$(document).on('change', '#uploadTenantPhotoInput', function () {
				const file = this.files[0];
				if (!file) return;
				const previewUrl = URL.createObjectURL(file);
				$('#tenantPhotoPreview').attr('src', previewUrl);
				// 不上傳，只預覽
			});

			// 房東身份證正面上傳（編輯）
			$(document).on('change', '#uploadIdCardFrontInput', function () {
				const file = this.files[0];
				if (!file) return;
				const previewUrl = URL.createObjectURL(file);
				$('#idCardFrontPreview').attr('src', previewUrl);
				// 不上傳，只預覽
			});

			// 房東身份證反面上傳（編輯）
			$(document).on('change', '#uploadIdCardBackInput', function () {
				const file = this.files[0];
				if (!file) return;
				const previewUrl = URL.createObjectURL(file);
				$('#idCardBackPreview').attr('src', previewUrl);
				// 不上傳，只預覽
			});

			// 綁定編輯表單送出事件
			$('#editForm').off('submit').on('submit', function (e) {
				e.preventDefault();

				// 檢查必填欄位
				const userName = $('input[name="HUserName"]', '#editForm').val().trim();
				const phoneNumber = $('input[name="HPhoneNumber"]', '#editForm').val().trim();
				const email = $('input[name="HEmail"]', '#editForm').val().trim();

				// 移除所有無效提示
				$('.invalid-feedback', '#editForm').remove();
				$('.is-invalid', '#editForm').removeClass('is-invalid');

				if (!userName || !phoneNumber || !email) {
					// 對每個空欄位添加無效提示
					if (!userName) {
						$('input[name="HUserName"]', '#editForm').addClass('is-invalid');
						$('input[name="HUserName"]', '#editForm').after('<div class="invalid-feedback">請填寫此欄位</div>');
					}
					if (!phoneNumber) {
						$('input[name="HPhoneNumber"]', '#editForm').addClass('is-invalid');
						$('input[name="HPhoneNumber"]', '#editForm').after('<div class="invalid-feedback">請填寫此欄位</div>');
					}
					if (!email) {
						$('input[name="HEmail"]', '#editForm').addClass('is-invalid');
						$('input[name="HEmail"]', '#editForm').after('<div class="invalid-feedback">請填寫此欄位</div>');
					}
					
					// 聚焦第一個無效欄位
					$('.is-invalid', '#editForm').first().focus();
					return;
				}

				// 檢查是否有欄位標記為無效
				if ($('.is-invalid', '#editForm').length > 0) {
					$('.is-invalid', '#editForm').first().focus();
					return;
				}

				const photoInput = document.getElementById('uploadTenantPhotoInput');
				const photoFile = photoInput && photoInput.files[0];
				const idCardFrontInput = document.getElementById('uploadIdCardFrontInput');
				const idCardFrontFile = idCardFrontInput && idCardFrontInput.files[0];
				const idCardBackInput = document.getElementById('uploadIdCardBackInput');
				const idCardBackFile = idCardBackInput && idCardBackInput.files[0];

				function submitEdit(photoFileName, idCardFrontFileName, idCardBackFileName) {
					const formData = {
						HTenantId: $('#editForm').find('input[name="HTenantId"]').val(),
						HUserName: userName,
						HBirthday: $('#editForm').find('input[name="HBirthday"]').val() || null,
						HGender: $('#editForm').find('select[name="HGender"]').val() === "true",
						HPhoneNumber: phoneNumber,
						HEmail: email,
						HPassword: $('#editForm').find('input[name="HPassword"]').val().trim() || null,
						HAddress: $('#editForm').find('input[name="HAddress"]').val().trim() || null,
						HStatus: $('#editForm').find('select[name="HStatus"]').val() || "未驗證",
						HImages: photoFileName || $('#HImages').val() || null,
						HLandlords: [{
							HLandlordName: $('#editForm').find('input[name="HLandlords[0].HLandlordName"]').val(),
							HStatus: $('#editForm').find('select[name="HLandlords[0].HStatus"]').val(),
							HBankName: $('#editForm').find('input[name="HLandlords[0].HBankName"]').val(),
							HBankAccount: $('#editForm').find('input[name="HLandlords[0].HBankAccount"]').val(),
							HIdCardFrontUrl: idCardFrontFileName || $('#HIdCardFrontUrl').val(),
							HIdCardBackUrl: idCardBackFileName || $('#HIdCardBackUrl').val()
						}]
					};

					// 檢查房東資料是否存在
					const hasLandlordData = formData.HLandlords[0].HLandlordName || 
						formData.HLandlords[0].HStatus || 
						formData.HLandlords[0].HBankName || 
						formData.HLandlords[0].HBankAccount;

					// 如果沒有房東資料，則不發送房東資料
					if (!hasLandlordData) {
						delete formData.HLandlords;
					}

					$.ajax({
						type: 'PUT',
						url: '/Admin/User/Update',
						contentType: 'application/json',
						data: JSON.stringify(formData),
						success: function () {
							showToast('✅ 更新成功', true);
							const modal = bootstrap.Modal.getInstance(document.getElementById('editModal'));
							modal.hide();
							$('#searchForm').submit();
						},
						error: function (xhr) {
							showToast('❌ 更新失敗：' + xhr.responseText, false);
						}
					});
				}

				// 處理所有檔案上傳
				const uploadPromises = [];

				if (photoFile) {
					uploadPromises.push(
						new Promise((resolve, reject) => {
							const uploadData = new FormData();
							uploadData.append('photo', photoFile);
							$.ajax({
								url: '/Admin/User/UploadTenantPhoto',
								type: 'POST',
								data: uploadData,
								processData: false,
								contentType: false,
								success: function (url) {
									resolve({ type: 'photo', fileName: url.split('/').pop() });
								},
								error: function () {
									reject('照片上傳失敗');
								}
							});
						})
					);
				}

				if (idCardFrontFile) {
					uploadPromises.push(
						new Promise((resolve, reject) => {
							const uploadData = new FormData();
							uploadData.append('photo', idCardFrontFile);
							$.ajax({
								url: '/Admin/User/UploadLandlordIdFront',
								type: 'POST',
								data: uploadData,
								processData: false,
								contentType: false,
								success: function (url) {
									resolve({ type: 'idCardFront', fileName: url.split('/').pop() });
								},
								error: function () {
									reject('身份證正面上傳失敗');
								}
							});
						})
					);
				}

				if (idCardBackFile) {
					uploadPromises.push(
						new Promise((resolve, reject) => {
							const uploadData = new FormData();
							uploadData.append('photo', idCardBackFile);
							$.ajax({
								url: '/Admin/User/UploadLandlordIdBack',
								type: 'POST',
								data: uploadData,
								processData: false,
								contentType: false,
								success: function (url) {
									resolve({ type: 'idCardBack', fileName: url.split('/').pop() });
								},
								error: function () {
									reject('身份證反面上傳失敗');
								}
							});
						})
					);
				}

				if (uploadPromises.length > 0) {
					Promise.all(uploadPromises)
						.then(results => {
							let photoFileName = null;
							let idCardFrontFileName = null;
							let idCardBackFileName = null;

							results.forEach(result => {
								switch (result.type) {
									case 'photo':
										photoFileName = result.fileName;
										break;
									case 'idCardFront':
										idCardFrontFileName = result.fileName;
										break;
									case 'idCardBack':
										idCardBackFileName = result.fileName;
										break;
								}
							});

							submitEdit(photoFileName, idCardFrontFileName, idCardBackFileName);
						})
						.catch(error => {
							showToast('❌ ' + error, false);
						});
				} else {
					submitEdit(null, null, null);
				}
			});
		}


			$(document).on('click', '.btn-delete', function () {
				const id = $(this).data('id');
				if (confirm("確定要刪除這筆使用者資料嗎？")) {
							$.ajax({
			url: '/Admin/User/Delete',
			type: 'POST',
			data: { id: id }, // ✅ 用傳統表單格式送出
			success: function () {
				showToast('刪除成功！', true);
				$('#searchForm').submit();
			},
			error: function () {
				showToast('刪除失敗！', false);
			}
		});

				}
			});
		});

			// ✅ 新增使用者表單處理邏輯
		function bindCreateForm() {
			const normalizeImagePath = (filename) => {
				if (!filename) return "";
				return filename.replace(/^\/?images\/User\/?/i, "/images/User/");
			};

            // 密碼顯示切換功能
            window.toggleCreatePassword = function() {
                const passwordField = document.getElementById('create-password-field');
                const icon = document.getElementById('create-password-toggle-icon');
                
                if (passwordField.type === 'password') {
                    passwordField.type = 'text';
                    icon.classList.remove('fa-eye');
                    icon.classList.add('fa-eye-slash');
                } else {
                    passwordField.type = 'password';
                    icon.classList.remove('fa-eye-slash');
                    icon.classList.add('fa-eye');
                }
            };

            // 檢查電話唯一性
            $('input[name="HPhoneNumber"]').on('blur', function() {
                const phoneNumber = $(this).val().trim();
                if (phoneNumber) {
                    $.getJSON(`/Admin/User/CheckPhoneExists?phoneNumber=${encodeURIComponent(phoneNumber)}`, function(data) {
                        if (data.exists) {
                            $('input[name="HPhoneNumber"]').addClass('is-invalid').focus();
                            if (!$('input[name="HPhoneNumber"]').next('.invalid-feedback').length) {
                                $('input[name="HPhoneNumber"]').after('<div class="invalid-feedback">此電話號碼已被使用，請使用其他電話號碼</div>');
                            }
                        } else {
                            $('input[name="HPhoneNumber"]').removeClass('is-invalid').addClass('is-valid');
                            $('input[name="HPhoneNumber"]').next('.invalid-feedback').remove();
                        }
                    });
                }
            });

            // 檢查電子郵件唯一性
            $('input[name="HEmail"]').on('blur', function() {
                const email = $(this).val().trim();
                if (email) {
                    $.getJSON(`/Admin/User/CheckEmailExists?email=${encodeURIComponent(email)}`, function(data) {
                        if (data.exists) {
                            $('input[name="HEmail"]').addClass('is-invalid').focus();
                            if (!$('input[name="HEmail"]').next('.invalid-feedback').length) {
                                $('input[name="HEmail"]').after('<div class="invalid-feedback">此電子郵件已被使用，請使用其他電子郵件</div>');
                            }
                        } else {
                            $('input[name="HEmail"]').removeClass('is-invalid').addClass('is-valid');
                            $('input[name="HEmail"]').next('.invalid-feedback').remove();
                        }
                    });
                }
            });

			// ✅ 房客照片上傳（新增）
			$(document).on('change', '#uploadTenantPhotoInput', function () {
				const file = this.files[0];
				if (!file) return;
				const previewUrl = URL.createObjectURL(file);
				$('#tenantPhotoPreview').attr('src', previewUrl);
				// 不上傳，只預覽
			});

			// ✅ 綁定新增表單送出事件
			$('#createForm').off('submit').on('submit', function (e) {
				e.preventDefault();

				// 檢查必填欄位
				const userName = $('input[name="HUserName"]').val().trim();
				const phoneNumber = $('input[name="HPhoneNumber"]').val().trim();
				const email = $('input[name="HEmail"]').val().trim();
				const password = $('input[name="HPassword"]').val().trim();

				if (!userName || !phoneNumber || !email || !password) {
					// 對每個空欄位添加無效提示
					if (!userName) {
						$('input[name="HUserName"]').addClass('is-invalid');
						if (!$('input[name="HUserName"]').next('.invalid-feedback').length) {
							$('input[name="HUserName"]').after('<div class="invalid-feedback">請填寫此欄位</div>');
						}
					}
					if (!phoneNumber) {
						$('input[name="HPhoneNumber"]').addClass('is-invalid');
						if (!$('input[name="HPhoneNumber"]').next('.invalid-feedback').length) {
							$('input[name="HPhoneNumber"]').after('<div class="invalid-feedback">請填寫此欄位</div>');
						}
					}
					if (!email) {
						$('input[name="HEmail"]').addClass('is-invalid');
						if (!$('input[name="HEmail"]').next('.invalid-feedback').length) {
							$('input[name="HEmail"]').after('<div class="invalid-feedback">請填寫此欄位</div>');
						}
					}
					if (!password) {
						$('input[name="HPassword"]').addClass('is-invalid');
						if (!$('input[name="HPassword"]').next('.invalid-feedback').length) {
							$('input[name="HPassword"]').after('<div class="invalid-feedback">請填寫此欄位</div>');
						}
					}
					
					// 聚焦第一個無效欄位
					$('.is-invalid').first().focus();
					return;
				}

                // 檢查是否有欄位標記為無效
                if ($('.is-invalid').length > 0) {
                    $('.is-invalid').first().focus();
                    return;
                }

				const photoInput = document.getElementById('uploadTenantPhotoInput');
				const photoFile = photoInput && photoInput.files[0];
				function submitUser(photoFileName) {
					const formData = {
						HUserName: userName,
						HBirthday: $('input[name="HBirthday"]').val() || null,
						HGender: $('select[name="HGender"]').val() === "true",
						HPhoneNumber: phoneNumber,
						HEmail: email,
						HPassword: password,
						HAddress: $('input[name="HAddress"]').val().trim() || null,
						HStatus: $('select[name="HStatus"]').val() || "未驗證",
						HImages: photoFileName || null,
						HLandlords: []
					};
					$.ajax({
						type: 'POST',
						url: '/Admin/User/Create',
						contentType: 'application/json',
						data: JSON.stringify(formData),
						success: function () {
							showToast('✅ 新增成功', true);
							const modal = bootstrap.Modal.getInstance(document.getElementById('editModal'));
							modal.hide();
							$('#searchForm').submit();
						},
						error: function (xhr) {
							showToast('❌ 新增失敗：' + xhr.responseText, false);
						}
					});
				}
				if (photoFile) {
					const uploadData = new FormData();
					uploadData.append('photo', photoFile);
					$.ajax({
						url: '/Admin/User/UploadTenantPhoto',
						type: 'POST',
						data: uploadData,
						processData: false,
						contentType: false,
						success: function (url) {
							const fileName = url.split('/').pop();
							submitUser(fileName);
						},
						error: function () {
							showToast('❌ 照片上傳失敗', false);
							submitUser(null);
						}
					});
				} else {
					submitUser(null);
				}
			});
		}

	</script>
}

